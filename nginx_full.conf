# Tokyo Kafe - Full Nginx Configuration
# =======================================
# Beget serverda ishlash uchun to'liq Nginx sozlamalari

# Backend API Server (Django + Gunicorn)
upstream django_backend {
    server 127.0.0.1:8000;
}

# Frontend Server (Next.js)
upstream nextjs_frontend {
    server 127.0.0.1:3000;
}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name tokyokafe.uz www.tokyokafe.uz;
    
    # Let's Encrypt SSL uchun
    location /.well-known/acme-challenge/ {
        root /home/u1234567/public_html;
    }
    
    # Boshqa barcha so'rovlarni HTTPS ga yo'naltirish
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Main HTTPS Server
server {
    listen 443 ssl http2;
    server_name tokyokafe.uz www.tokyokafe.uz;
    
    # SSL Certificate (Beget avtomatik beradi)
    ssl_certificate /path/to/ssl/certificate.crt;
    ssl_certificate_key /path/to/ssl/private.key;
    
    # SSL Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # Max upload size
    client_max_body_size 50M;
    client_body_buffer_size 128k;
    
    # Timeouts
    proxy_connect_timeout 600;
    proxy_send_timeout 600;
    proxy_read_timeout 600;
    send_timeout 600;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript 
               application/x-javascript application/xml+rss 
               application/json application/javascript 
               image/svg+xml;
    
    # Logs
    access_log /home/u1234567/public_html/logs/nginx_access.log;
    error_log /home/u1234567/public_html/logs/nginx_error.log;
    
    # ==========================================
    # BACKEND API ROUTES (Django)
    # ==========================================
    
    location /api/ {
        # CORS headers for API
        add_header Access-Control-Allow-Origin "https://tokyokafe.uz" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-CSRFToken" always;
        add_header Access-Control-Allow-Credentials "true" always;
        add_header Access-Control-Max-Age 1728000 always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://tokyokafe.uz" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-CSRFToken" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Max-Age 1728000 always;
            add_header Content-Type "text/plain; charset=utf-8" always;
            add_header Content-Length 0 always;
            return 204;
        }
        
        proxy_pass http://django_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
    
    location /admin/ {
        proxy_pass http://django_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
    
    # ==========================================
    # STATIC FILES (Django)
    # ==========================================
    
    location /static/ {
        alias /home/u1234567/public_html/backend/staticfiles/;
        expires 30d;
        add_header Cache-Control "public, immutable";
        access_log off;
        
        # Gzip for static files
        gzip_static on;
    }
    
    # ==========================================
    # MEDIA FILES (Django - rasmlar)
    # ==========================================
    
    location /media/ {
        alias /home/u1234567/public_html/backend/media/;
        expires 7d;
        add_header Cache-Control "public";
        access_log off;
        
        # Image optimization headers
        add_header X-Content-Type-Options "nosniff";
        
        # CORS for images
        add_header Access-Control-Allow-Origin "*";
    }
    
    # ==========================================
    # NEXT.JS STATIC FILES
    # ==========================================
    
    location /_next/static/ {
        alias /home/u1234567/public_html/frontend/.next/static/;
        expires 365d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    location /_next/image {
        proxy_pass http://nextjs_frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Next.js public folder
    location /images/ {
        alias /home/u1234567/public_html/frontend/public/images/;
        expires 30d;
        add_header Cache-Control "public";
        access_log off;
    }
    
    # Favicon and robots
    location = /favicon.ico {
        alias /home/u1234567/public_html/frontend/public/favicon.ico;
        access_log off;
        log_not_found off;
    }
    
    location = /robots.txt {
        alias /home/u1234567/public_html/frontend/public/robots.txt;
        access_log off;
        log_not_found off;
    }
    
    # ==========================================
    # FRONTEND (Next.js)
    # ==========================================
    
    location / {
        proxy_pass http://nextjs_frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Next.js HMR (development)
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;
    }
}

# API subdomain (agar kerak bo'lsa)
server {
    listen 443 ssl http2;
    server_name api.tokyokafe.uz;
    
    ssl_certificate /path/to/ssl/certificate.crt;
    ssl_certificate_key /path/to/ssl/private.key;
    
    client_max_body_size 50M;
    
    location / {
        # CORS headers for API subdomain
        add_header Access-Control-Allow-Origin "https://tokyokafe.uz" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-CSRFToken" always;
        add_header Access-Control-Allow-Credentials "true" always;
        add_header Access-Control-Max-Age 1728000 always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://tokyokafe.uz" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-CSRFToken" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Max-Age 1728000 always;
            add_header Content-Type "text/plain; charset=utf-8" always;
            add_header Content-Length 0 always;
            return 204;
        }
        
        proxy_pass http://django_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /static/ {
        alias /home/u1234567/public_html/backend/staticfiles/;
        expires 30d;
    }
    
    location /media/ {
        alias /home/u1234567/public_html/backend/media/;
        expires 7d;
    }
}

