"""
Django settings for restaurant_api project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from decouple import config
from django.urls import reverse_lazy
from django.templatetags.static import static

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', default='django-insecure-your-secret-key-here')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=True, cast=bool)

ALLOWED_HOSTS = ['localhost', '127.0.0.1', '0.0.0.0', '192.168.1.11', 'api.tokyokafe.uz', 'tokyokafe.uz', 'www.tokyokafe.uz']


# Application definition

INSTALLED_APPS = [
    'unfold',  # django-unfold must be before django.contrib.admin
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'django_filters',
    'menu',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.cache.UpdateCacheMiddleware',  # Cache middleware
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.gzip.GZipMiddleware',  # Compression
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.cache.FetchFromCacheMiddleware',  # Cache middleware
]

ROOT_URLCONF = 'restaurant_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'restaurant_api.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'uz'

TIME_ZONE = 'Asia/Tashkent'

USE_I18N = True

USE_TZ = True

# Languages
LANGUAGES = [
    ('uz', 'O\'zbekcha'),
    ('en', 'English'),
    ('ru', '–†—É—Å—Å–∫–∏–π'),
]

LOCALE_PATHS = [
    BASE_DIR / 'locale',
]


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Django REST Framework
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],
}

# CORS settings
# CORS sozlamalarini comment qilish - Nginx orqali boshqariladi
# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:3000",
#     "http://127.0.0.1:3000",
#     "http://localhost:3001",
#     "http://127.0.0.1:3001",
#     "http://192.168.1.11:3000",
#     "http://192.168.1.11:3001",
#     "https://tokyokafe.uz",
#     "https://www.tokyokafe.uz",
#     "https://api.tokyokafe.uz",
#     "https://tokyo-eight-mu.vercel.app",
#     "https://tokyo-git-main-marimovdevs-projects.vercel.app",
#     "https://tokyo-marimovdevs-projects.vercel.app",
# ]

# # Vercel preview URLlarni qo'llab-quvvatlash uchun
# CORS_ALLOWED_ORIGIN_REGEXES = [
#     r"^https://tokyo-.*\.vercel\.app$",
# ]

# CORS_ALLOW_CREDENTIALS = True

# CORS_ALLOW_ALL_ORIGINS = False  # Production uchun o'chirildi

# # CORS headers - Cache-Control qo'shish
# CORS_ALLOW_HEADERS = [
#     'accept',
#     'accept-encoding',
#     'authorization',
#     'content-type',
#     'dnt',
#     'origin',
#     'user-agent',
#     'x-csrftoken',
#     'x-requested-with',
#     'cache-control',  # Frontend cache uchun
# ]

# Session settings
SESSION_COOKIE_HTTPONLY = False  # Allow JavaScript access for debugging
SESSION_COOKIE_SAMESITE = 'Lax'  # Allow cross-site requests
SESSION_COOKIE_SECURE = False  # Allow HTTP in development

# Cache settings for better performance
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
        'TIMEOUT': 300,  # 5 minutes default
        'OPTIONS': {
            'MAX_ENTRIES': 1000,
        }
    }
}

# Cache timeout settings
CACHE_MIDDLEWARE_ALIAS = 'default'
CACHE_MIDDLEWARE_SECONDS = 300  # 5 minutes
CACHE_MIDDLEWARE_KEY_PREFIX = ''

# Performance settings
CONN_MAX_AGE = 60  # Database connection pooling
DATA_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024  # 10MB max upload size
FILE_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024  # 10MB max file size

# CSRF settings
CSRF_COOKIE_HTTPONLY = False  # Allow JavaScript access to CSRF token
CSRF_COOKIE_SAMESITE = 'Lax'  # Allow cross-site requests
CSRF_COOKIE_SECURE = False  # Allow HTTP in development
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    "http://localhost:3001",
    "http://127.0.0.1:3001",
    "http://localhost:3003",
    "http://127.0.0.1:3003",
    "http://192.168.1.11:3000",
    "http://192.168.1.11:3001",
    "https://tokyokafe.uz",
    "https://www.tokyokafe.uz",
    "https://api.tokyokafe.uz",
    "https://tokyo-eight-mu.vercel.app",
    "https://tokyo-git-main-marimovdevs-projects.vercel.app",
    "https://tokyo-marimovdevs-projects.vercel.app",
    "https://*.vercel.app",
]

# Django Unfold Configuration
UNFOLD = {
    "SITE_TITLE": "üçΩÔ∏è Tokyo Restaurant - Boshqaruv",
    "SITE_HEADER": "Tokyo Restaurant - Boshqaruv Paneli",
    "SITE_URL": "/",
    "SITE_ICON": {
        "light": lambda request: static("logo.png"),
        "dark": lambda request: static("logo.png"),
    },
    "SITE_LOGO": {
        "light": lambda request: static("logo.png"),
        "dark": lambda request: static("logo.png"),
    },
    "SITE_SYMBOL": "üçΩÔ∏è",
    "SHOW_HISTORY": True,
    "SHOW_VIEW_ON_SITE": True,
    "ENVIRONMENT": "Tokyo Restaurant Boshqaruv Paneli",
    "DASHBOARD_CALLBACK": "menu.admin.dashboard_callback",
    "LOGIN": {
        "image": lambda request: static("logo.png"),
        "redirect_after": lambda request: reverse_lazy("admin:index"),
    },
    "COLORS": {
        "primary": {
            "50": "248 250 252",
            "100": "241 245 249",
            "200": "226 232 240",
            "300": "203 213 225",
            "400": "148 163 184",
            "500": "100 116 139",
            "600": "71 85 105",
            "700": "51 65 85",
            "800": "30 41 59",
            "900": "15 23 42",
        }
    },
    "STYLES": [
        lambda request: static("css/custom-admin.css"),
    ],
    "SCRIPTS": [
        lambda request: static("js/custom-admin.js"),
    ],
    "COLORS": {
        "primary": {
            "50": "250 245 255",
            "100": "243 232 255", 
            "200": "233 213 255",
            "300": "216 180 254",
            "400": "196 181 253",
            "500": "147 51 234",
            "600": "126 34 206",
            "700": "109 40 217",
            "800": "91 33 182",
            "900": "76 29 149",
            "950": "46 16 101",
        },
    },
    "EXTENSIONS": {
        "modeltranslation": {
            "flags": {
                "en": "üá∫üá∏",
                "uz": "üá∫üáø", 
                "ru": "üá∑üá∫",
            },
        },
    },
    "SIDEBAR": {
        "show_search": True,
        "show_all_applications": True,
        "navigation": [
            {
                "title": "Restoran Boshqaruvi",
                "separator": True,
                "items": [
                    {
                        "title": "Boshqaruv Paneli",
                        "icon": "dashboard",
                        "link": lambda request: reverse_lazy("admin:index"),
                    },
                    {
                        "title": "Menyu Mahsulotlari",
                        "icon": "restaurant",
                        "link": lambda request: reverse_lazy("admin:menu_menuitem_changelist"),
                    },
                    {
                        "title": "Kategoriyalar", 
                        "icon": "category",
                        "link": lambda request: reverse_lazy("admin:menu_category_changelist"),
                    },
                    {
                        "title": "Aksiyalar",
                        "icon": "local_offer",
                        "link": lambda request: reverse_lazy("admin:menu_promotion_changelist"),
                    },
                ],
            },
            {
                "title": "Buyurtmalar va Sharhlar",
                "separator": True,
                "items": [
                    {
                        "title": "Buyurtmalar",
                        "icon": "shopping_cart",
                        "link": lambda request: reverse_lazy("admin:menu_order_changelist"),
                    },
                    {
                        "title": "Sharhlar",
                        "icon": "star",
                        "link": lambda request: reverse_lazy("admin:menu_review_changelist"),
                    },
                ],
            },
            {
                "title": "Sozlamalar",
                "separator": True,
                "items": [
                    {
                        "title": "Sayt Sozlamalari",
                        "icon": "settings",
                        "link": lambda request: reverse_lazy("admin:menu_sitesettings_changelist"),
                    },
                    {
                        "title": "Restoran Ma'lumotlari",
                        "icon": "info",
                        "link": lambda request: reverse_lazy("admin:menu_restaurantinfo_changelist"),
                    },
                ],
            },
        ],
    },
    "TABS": [
        {
            "models": [
                "menu.menuitem",
                "menu.category",
            ],
            "items": [
                {
                    "title": "Menyu Boshqaruvi",
                    "link": lambda request: reverse_lazy("admin:menu_menuitem_changelist"),
                },
            ],
        },
    ],
}